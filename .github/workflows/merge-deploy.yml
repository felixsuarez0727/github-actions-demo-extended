name: Deploy to Production on Merge

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  check-merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      is_merge: ${{ steps.check_merge.outputs.is_merge }}
    steps:
      - name: Check if this is a merged PR
        id: check_merge
        run: |
          echo "✅ This is a merged PR."
          echo "is_merge=true" >> $GITHUB_OUTPUT

  check-labels:
    needs: check-merge
    if: needs.check-merge.outputs.is_merge == 'true'
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.check_labels.outputs.environments }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check PR Labels
        id: check_labels
        uses: ./.github/actions/check-labels-action
        with:
          pr_number: ${{ github.event.pull_request.number }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: check-labels
    if: needs.check-merge.outputs.is_merge == 'true' && needs.check-labels.outputs.environments != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ${{ fromJson(needs.check-labels.outputs.environments) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Deploy to ${{ matrix.environment }}
        uses: ./.github/workflows/deploy-environment
        with:
          environment: ${{ matrix.environment }}

  notify:
    needs: [check-labels, deploy]
    if: always() && needs.check-merge.outputs.is_merge == 'true' && needs.check-labels.outputs.environments != '[]'
    runs-on: ubuntu-latest
    steps:
      - run: |
          if [[ "${{ needs.deploy.result }}" == "success" ]]; then
            echo "✅ Deployment finished successfully"
          else
            echo "❌ Deployment failed"
          fi